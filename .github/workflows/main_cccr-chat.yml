name: Build and push to ACR

on:
  push:
    branches:
      - main
  workflow_dispatch: # Manual

jobs:
  build-and-push:
    name: Build and push to ACR
      #runs-on: [self-hosted,frontend]
    runs-on: [self-hosted]
    permissions:
      contents: read # actions/checkout
    
    env:
      ACR_NAME: "hjacr123"
      ACR_IMAGE_NAME: "hjimage"

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Login to Azure(Managed ID)'
        uses: azure/login@v2
        with:
          auth-type: IDENTITY
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR using Azure CLI
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Short SHA
        id: vars
        shell: bash
        run: echo "sha7=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Set up Docker image tags
        run: |
          # 고유 태그: 커밋 해시를 사용해 버전을 명확히 추적
          echo "IMAGE_TAG_UNIQUE=${{ env.ACR_NAME }}-${{ secrets.ACR_LOGIN_SERVER_HASH }}.azurecr.io/${{ env.ACR_IMAGE_NAME }}:${{ steps.vars.outputs.sha7 }}" >> $GITHUB_ENV

          # 최신 태그: 'latest' 태그는 개발/테스트 환경에서 편리하게 사용
          echo "IMAGE_TAG_LATEST=${{ env.ACR_NAME }}-${{ secrets.ACR_LOGIN_SERVER_HASH }}.azurecr.io/${{ env.ACR_IMAGE_NAME }}:latest" >> $GITHUB_ENV

      - name: Build and push Docker image to ACR
        run: |
          # 두 개의 태그로 이미지 빌드
          docker build . -t ${{ env.IMAGE_TAG_UNIQUE }} -t ${{ env.IMAGE_TAG_LATEST }}
          
          # 두 개의 태그 모두 푸시
          docker push ${{ env.IMAGE_TAG_UNIQUE }}
          docker push ${{ env.IMAGE_TAG_LATEST }}

      - name: Checkout Manifest Repository
        uses: actions/checkout@v4
        with:
          repository: hanjin0924/chatbot-frontend
          token: ${{ secrets.PAT_TOKEN }}
          path: manifests
          ref: main

      - name: Install yq (if not present)
        run: |
          if ! command -v yq >/dev/null 2>&1; then
            sudo wget -qO /usr/local/bin/yq \
              https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
            sudo chmod +x /usr/local/bin/yq
          fi

      - name: Update Kubernetes manifest image
        run: |
          cd manifests
          yq e -i '.spec.template.spec.containers[0].image = "${{ env.IMAGE_TAG_UNIQUE }}"' resource/web.yaml

      - name: Commit and push changes
        run: |
          cd manifests
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add .
            git commit -m "Update front image to ${IMAGE_TAG_UNIQUE}"
            git push origin main
          else
            echo "No changes to commit."
          fi

